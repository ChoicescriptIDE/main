var winState, currWinMode, resizeTimeout, isMaximizationEvent = !1, deltaHeight = gui.App.manifest.window.frame ? 0 : "disabled";

function initWindowState() {
    ("function" != typeof win.isDevToolsOpen || win.isDevToolsOpen()) && void 0 !== win.isDevToolsOpen || ((winState = JSON.parse(localStorage.windowState || "null")) ? (currWinMode = winState.mode, 
    restoreWindowState(), "maximized" === currWinMode && ("darwin" === process.platform ? win.enterFullscreen() : win.maximize())) : (currWinMode = "normal", 
    win.setPosition("center")));
}

function dumpWindowState() {
    (winState = winState || {}).mode = "maximized" === currWinMode ? "maximized" : "normal", 
    "normal" === currWinMode && (winState.x = win.x, winState.y = win.y, winState.width = win.width, 
    winState.height = win.height, "disabled" !== deltaHeight && 0 !== deltaHeight && "maximized" !== currWinMode && (winState.deltaHeight = deltaHeight));
}

function restoreWindowState() {
    "disabled" !== deltaHeight && void 0 !== winState.deltaHeight && (deltaHeight = winState.deltaHeight, 
    winState.height = winState.height - deltaHeight), gui.Screen.Init();
    for (var screens = gui.Screen.screens, locationIsOnAScreen = !1, i = 0; i < screens.length; i++) {
        var screen = screens[i];
        winState.x > screen.bounds.x && winState.x < screen.bounds.x + screen.bounds.width && winState.y > screen.bounds.y && winState.y < screen.bounds.y + screen.bounds.height && (console.debug("Location of window (" + winState.x + "," + winState.y + ") is on screen " + JSON.stringify(screen)), 
        locationIsOnAScreen = !0);
    }
    locationIsOnAScreen ? (win.resizeTo(winState.width, winState.height), win.moveTo(winState.x, winState.y)) : (console.debug("Last saved position of windows is not usable on current monitor setup. Moving window to center!"), 
    win.setPosition("center"));
}

function saveWindowState() {
    dumpWindowState(), localStorage.windowState = JSON.stringify(winState);
}

initWindowState(), win.on("maximize", function() {
    isMaximizationEvent = !0, currWinMode = "maximized";
}), win.on("minimize", function() {
    currWinMode = "minimized";
}), win.on("enter-fullscreen", function() {
    isMaximizationEvent = !0, winState.mode = "maximized", localStorage.windowState = JSON.stringify(winState);
}), win.on("leave-fullscreen", function() {
    winState.mode = "normal", localStorage.windowState = JSON.stringify(winState);
}), win.on("restore", function() {
    winState.mode = "normal", localStorage.windowState = JSON.stringify(winState);
}), win.on("move", function(x, y) {
    saveWindowState();
}), win.window.addEventListener("resize", function() {
    clearTimeout(resizeTimeout), resizeTimeout = setTimeout(function() {
        isMaximizationEvent ? isMaximizationEvent = !1 : "maximized" === currWinMode && (currWinMode = "normal"), 
        "disabled" !== deltaHeight && !1 === deltaHeight && 0 !== (deltaHeight = win.height - winState.height) && win.resizeTo(winState.width, win.height - deltaHeight), 
        dumpWindowState();
    }, 500);
}, !1);